source("Load_maps.R") # Raster stack with biomass data (Liu et al.), mycorrhizal types (Soudzilovskaia et al), C:N (WISE30sec) and P (by Bray1 method)
# Transform raster stack to data.frame
s.df <- as.data.frame(s,xy=TRUE)
s.df <- s.df[,c("x", "y", "P", "CNr")] 
s.df$CNr_recip <- 1/s.df$CNr
s.df$P_recip <- 1/s.df$P
s.df$Fumigation.type <- factor("FACE", levels=c("FACE","G","OTC"))
contrasts(s.df$Fumigation.type) <- cbind(
  FaceG_OTC = c(-1, -1,  2),
  Face_G    = c(-1,  1,  0))
library(dummies)
s.pred <- s.df[,c("CNr_recip", "P_recip", "Fumigation.type")]
s.pred <- dummy.data.frame("Fumigation.type",data=s.pred, sep = "",drop=FALSE)

# AM
options(na.action = "na.pass")
AMpred <- as.data.frame.list(predict(am.mv, newmods =cbind(s.pred$CNr_recip, s.pred$P_recip, s.pred$Fumigation.typeG, s.pred$Fumigation.typeOTC), addx=T))
AMpred <- cbind(s.df[1:2], AMpred)
AMrelES <- rasterFromXYZ(AMpred[,c("x", "y", "pred")],crs="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
AMrelES <- make_pct(AMrelES * s[["AM"]]/100)
AMrelSE <- rasterFromXYZ(AMpred[,c("x", "y", "se")],crs="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
AMrelSE <- make_pct(AMrelSE * s[["AM"]]/100)

writeRaster# ECM
options(na.action = "na.pass")
Ppred <- as.data.frame.list(predict(ecm.mv, newmods =cbind(s.pred$P_recip, s.pred$CNr_recip, s.pred$Fumigation.typeG, s.pred$Fumigation.typeOTC), addx=T))
Ppred <- cbind(s.df[1:2], Ppred)
ECMrelES <- rasterFromXYZ(Ppred[,c("x", "y", "pred")],crs="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
ECMrelES <- make_pct(ECMrelES * s[["ECM"]]/100)
ECMrelSE <- rasterFromXYZ(Ppred[,c("x", "y", "se")],crs="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
ECMrelSE <- make_pct(ECMrelSE * s[["ECM"]]/100)

# Sum AM and ECM results
relES <- overlay(ECMrelES, AMrelES, fun=function(r1, r2){return(r1 + r2)})
relES <- overlay(relES,fun=function(x){ifelse(x<0, 0, x)})
relSE <- overlay(ECMrelSE, AMrelSE, fun=function(r1, r2){return(r1 + r2)})
relSE <- overlay(relSE,fun=function(x){ifelse(x<0, 0, x)})


### BIOMASS INCREMENT ###
Bcurrent <- mask(s[["biomass"]], relES)
Bfuture <- Bcurrent + Bcurrent * relES/100
Bincrement <- Bfuture - Bcurrent
cellStats(Bincrement,"sum", na.rm=T) * 10^-9 # eCO2-driven Biomass increment
(cellStats(Bincrement,"sum", na.rm=T) * 100) / cellStats(Bcurrent,"sum", na.rm=T) # % increase

Bcurrent_se <- Bcurrent + Bcurrent * relSE/100
Bse_Inc <- Bcurrent_se - Bcurrent
cellStats(Bse_Inc,"sum", na.rm=T) * 10^(-9) # Absolute error
(cellStats(Bse_Inc,"sum", na.rm=T) * 100) / cellStats(Bcurrent,"sum", na.rm=T)

#####################
### UNCERTAINTIES ###
#####################
# model with climate and soil predictors
all.se <- rma.mv(yi, vi, data=data, mods= ~ CNr_recip + P_recip + Fumigation.type + MAP2 + MAT,
                random = ~ 1 | Site.Name / obs)
source("load_maps_SE.R") 
se.df <- as.data.frame(s,xy=TRUE)
se.df <- se.df[,c("x", "y", "P", "CNr", "MAP", "MAT")] 
se.df$CNr_recip <- 1/se.df$CNr
se.df$P_recip <- 1/se.df$P
se.df$Fumigation.type <- factor("FACE", levels=c("FACE","G","OTC"))
contrasts(se.df$Fumigation.type) <- cbind(
  FaceG_OTC = c(-1, -1,  2),
  Face_G    = c(-1,  1,  0))
se.pred <- se.df[,c("CNr_recip", "P_recip", "Fumigation.type", "MAP", "MAT")]
se.pred <- dummy.data.frame("Fumigation.type",data=se.pred, sep = "",drop=FALSE)
Allse <- as.data.frame.list(predict(all.se, newmods =cbind(se.pred$CNr_recip, se.pred$P_recip, se.pred$Fumigation.typeG, se.pred$Fumigation.typeOTC,
                                                         se.pred$MAP, se.pred$MAT), addx=T))
Allse <- cbind(se.df[1:2], Allse)
AllrelSE <- rasterFromXYZ(Allse[,c("x", "y", "se")],crs="+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
AllrelSE <- make_pct(AllrelSE)
AllrelSE <- overlay(AllrelSE,fun=function(x){ifelse(x<0, 0, x)})

Bse <- Bcurrent + Bcurrent * relSE/100
BseInc <- Bse - Bcurrent


#####################
### Total Biomass ###
#####################

########### ESA - PAN ###########
esa <- raster("ESA_PANratios.tif")

total.s <- stack(esa,Bincrement, Bse_Inc)
total.df <- as.data.frame(total.s)

total.df <- group_by(total.df, ESA_PANratios_category) %>%  
  dplyr::summarise (IncSum= sum(layer.1, na.rm=T),
                    IncSumSE= sum(layer.2, na.rm=T)) %>% 
  mutate(IncSumPg=round(IncSum*10^-9,2),
         IncSumSEPg=round(IncSumSE*10^-9,2)) %>% droplevels()

#Calculate the increase in TOTAL BIOMASS using TB ratios from Liu et al.
library("readxl")
ratios <- read_excel("TBratio.xlsx", col_types = c("text", "numeric", "numeric", "guess", "guess"))

total.df <- merge(total.df,ratios, "ESA_PANratios_category")
total.df$TotBiom <- round(total.df$IncSumPg * total.df$TBratio,2)
total.df$TotBiomSE <- round(total.df$IncSumSEPg * total.df$TBratio,2)

CO2inc <- mean(data$co2conc)-mean(data$ambco2)
sum(total.df$IncSumPg) * 100/ CO2inc # CO2 increase is 250ppm, we want 100ppm
sum(total.df$IncSumSEPg) * 100/ CO2inc
TotBiom100r <- sum(total.df$TotBiom) * 100/ CO2inc
TotBiomSE100r <- sum(total.df$TotBiomSE) * 100/ CO2inc

#write to a CSV file
write.csv(total.df, file = "tables/TotalBiomass.csv")

# Aggregation 
agg <- total.df %>% dplyr::group_by(Aggregate) %>% dplyr::summarise(TotBiom_agg=sum(TotBiom), TotBiom_agg_SE= sum(TotBiomSE))
write.csv(agg, "tables/TotalBiomassAggregated.csv")
sum(agg$TotBiom_agg); sum(agg$TotBiom_agg_SE)

### MODIS - PAN ###
modis <- raster("MODIS_PANratios.tif")
modis[modis==0] <- NA
crs(modis) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0" 

modis.new <- projectRaster(modis, Bincrement, method="ngb")
s.modis <- stack(modis.new,Bincrement)
modis.df <- as.data.frame(s.modis)
modis.df <- modis.df %>% filter(!is.na(layer.2), layer.2 != 0) %>% group_by(layer.1) %>%  
  dplyr::summarise (IncSum= sum(layer.2, na.rm=T)) %>% mutate(IncSumPg=round(IncSum*10^-9,2)) %>% droplevels()

# Calculate the increase in TOTAL BIOMASS using TB ratios from Liu et al.
ratios <- read.csv("TBratiosMODIS.csv")
modis.df <- merge(modis.df,ratios, by.x="layer.1", by.y="ID")
modis.df$TotBiom <- round(modis.df$IncSumPg * modis.df$TBratio,2)
sum(modis.df$IncSumPg) * 100/ 250
sum(modis.df$TotBiom) * 100/ 250
write.csv(modis.df, file = "tables/TotalBiomassMODIS.csv")

